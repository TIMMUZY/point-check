#небольшой комментарий для теста

name: Frontend CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - uses: actions/checkout@v3
      - name: Send Telegram Notification User Wants to merge
        run: |
          # Получаем имя пользователя, который делает мердж
          COMMIT_AUTHOR=$(git log -1 --pretty=%an)
          echo "Commit author: $COMMIT_AUTHOR"
          MESSAGE="Внимание %0A$COMMIT_AUTHOR%0Aначинает мердж в main, Frontend приложение будет недоступно 3-5 минут.
          ${{ github.server_url }}/${{ github.repository }}/commits/main"
          curl -X POST \
            https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage \
            -d chat_id=${{ secrets.CHAT_ID }} \
            -d text="$MESSAGE"

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install
      - name: Build
        run: npm run build

      - name: Setup SSH directory and add server to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.5.1
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Prepare .env file
        run: |
          echo "SERVER_IP=${{ secrets.SERVER_IP }}" > .env
          scp .env ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}:~

      - name: Build Docker Image
        run: |
          docker build -t checkpoint-frontend:$GITHUB_SHA .
          echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login -u aasurov --password-stdin
          docker tag checkpoint-frontend:$GITHUB_SHA aasurov/anvilcoder-frontend:$GITHUB_SHA
          docker push aasurov/anvilcoder-frontend:$GITHUB_SHA
        env:
          DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Deploy to Server
        run: |
          export IMAGE_TAG=$GITHUB_SHA
          scp docker-compose.prod.yml ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}:~
          ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "echo 'IMAGE_TAG=$IMAGE_TAG' > .env"
          ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "docker-compose --env-file .env -f docker-compose.prod.yml up -d"

      - name: Send Telegram Notification
        if: success()
        run: |
          # Получаем заголовки последних 5 коммитов
          COMMITS=$(git log -5 --pretty=format:"%h - %s")
          MESSAGE="Произведен мерж в main:%0A$COMMITS%0AПроверьте изменения на GitHub: ${{ github.server_url }}/${{ github.repository }}/commits/main"
          curl -X POST \
            https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage \
            -d chat_id=${{ secrets.CHAT_ID }} \
            -d text="$MESSAGE"